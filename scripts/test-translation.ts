#!/usr/bin/env tsx

/**
 * Script para testar o novo sistema de tradu√ß√£o profissional
 * 
 * Execute com: npx tsx scripts/test-translation.ts
 */

import { professionalTranslationService } from '../src/lib/translation/professionalTranslationService';

// Textos de teste em ingl√™s (t√≠picos de resumos acad√™micos)
const testTexts = [
  "This study examines the effectiveness of cognitive behavioral therapy in treating anxiety disorders among adolescents.",
  "The research methodology involved a randomized controlled trial with 150 participants over a 12-month period.",
  "Results indicate significant improvement in patient outcomes when using the proposed treatment approach.",
  "The analysis reveals important factors that contribute to successful intervention strategies in clinical settings.",
  "This article presents a comprehensive review of recent developments in artificial intelligence applications.",
  "The findings suggest that early intervention programs can reduce the risk of developing chronic conditions.",
  "Participants showed measurable improvements in quality of life scores after completing the training program.",
  "The study concludes that further research is needed to validate these preliminary results in larger populations."
];

async function testTranslation() {
  console.log('üß™ Testando Sistema de Tradu√ß√£o Profissional\n');
  console.log('=' .repeat(80));
  
  // Verificar estat√≠sticas iniciais
  const initialStats = professionalTranslationService.getStats();
  console.log('üìä Estat√≠sticas Iniciais:');
  console.log(`   Cache: ${initialStats.cache.size}/${initialStats.cache.maxSize} entradas`);
  console.log('   Provedores dispon√≠veis:');
  initialStats.providers.forEach(provider => {
    const status = provider.available ? '‚úÖ Dispon√≠vel' : '‚ùå Indispon√≠vel';
    console.log(`     - ${provider.name}: ${status} (${provider.supportedLanguages.join(', ')})`);
  });
  console.log();

  let totalTests = 0;
  let successfulTranslations = 0;
  let highConfidenceTranslations = 0;
  let cacheHits = 0;
  let googleTranslateUsed = 0;
  
  for (let i = 0; i < testTexts.length; i++) {
    const originalText = testTexts[i];
    totalTests++;
    
    console.log(`üî§ Teste ${i + 1}/${testTexts.length}`);
    console.log(`üìù Original: ${originalText.substring(0, 80)}${originalText.length > 80 ? '...' : ''}`);
    
    try {
      const startTime = Date.now();
      const result = await professionalTranslationService.translateText(originalText);
      const duration = Date.now() - startTime;
      
      console.log(`üîÑ Traduzido: ${result.translatedText.substring(0, 80)}${result.translatedText.length > 80 ? '...' : ''}`);
      console.log(`üìä Detalhes:`);
      console.log(`   - Idioma detectado: ${result.sourceLanguage}`);
      console.log(`   - Traduzido: ${result.isTranslated ? 'Sim' : 'N√£o'}`);
      console.log(`   - Do cache: ${result.fromCache ? 'Sim' : 'N√£o'}`);
      console.log(`   - Confian√ßa: ${(result.confidence * 100).toFixed(1)}%`);
      console.log(`   - Provedor: ${result.provider}`);
      console.log(`   - Tempo: ${duration}ms`);
      
      if (result.warning) {
        console.log(`   ‚ö†Ô∏è  Aviso: ${result.warning}`);
      }
      
      // Estat√≠sticas
      if (result.isTranslated) successfulTranslations++;
      if (result.confidence >= 0.8) highConfidenceTranslations++;
      if (result.fromCache) cacheHits++;
      if (result.provider === 'google-translate') googleTranslateUsed++;
      
    } catch (error) {
      console.log(`‚ùå Erro: ${error instanceof Error ? error.message : error}`);
    }
    
    console.log('-'.repeat(80));
  }
  
  // Teste de cache - repetir primeira tradu√ß√£o
  console.log('\nüîÑ Testando Cache - Repetindo primeira tradu√ß√£o...');
  try {
    const startTime = Date.now();
    const result = await professionalTranslationService.translateText(testTexts[0]);
    const duration = Date.now() - startTime;
    
    console.log(`‚ö° Cache hit: ${result.fromCache ? 'Sim' : 'N√£o'} (${duration}ms)`);
    if (result.fromCache) cacheHits++;
  } catch (error) {
    console.log(`‚ùå Erro no teste de cache: ${error instanceof Error ? error.message : error}`);
  }
  
  // Estat√≠sticas finais
  console.log('\n' + '='.repeat(80));
  console.log('üìà RELAT√ìRIO FINAL');
  console.log('='.repeat(80));
  console.log(`üìä Testes realizados: ${totalTests}`);
  console.log(`‚úÖ Tradu√ß√µes bem-sucedidas: ${successfulTranslations}/${totalTests} (${(successfulTranslations/totalTests*100).toFixed(1)}%)`);
  console.log(`üéØ Alta confian√ßa (‚â•80%): ${highConfidenceTranslations}/${totalTests} (${(highConfidenceTranslations/totalTests*100).toFixed(1)}%)`);
  console.log(`‚ö° Cache hits: ${cacheHits}`);
  console.log(`üåê Google Translate usado: ${googleTranslateUsed}/${totalTests} (${(googleTranslateUsed/totalTests*100).toFixed(1)}%)`);
  
  const finalStats = professionalTranslationService.getStats();
  console.log(`üíæ Cache final: ${finalStats.cache.size}/${finalStats.cache.maxSize} entradas`);
  
  // Avalia√ß√£o da qualidade
  console.log('\nüéØ AVALIA√á√ÉO DE QUALIDADE:');
  if (highConfidenceTranslations / totalTests >= 0.8) {
    console.log('‚úÖ EXCELENTE: Mais de 80% das tradu√ß√µes com alta confian√ßa');
  } else if (highConfidenceTranslations / totalTests >= 0.6) {
    console.log('‚ö†Ô∏è  BOM: Entre 60-80% das tradu√ß√µes com alta confian√ßa');
  } else {
    console.log('‚ùå PRECISA MELHORAR: Menos de 60% das tradu√ß√µes com alta confian√ßa');
  }
  
  if (googleTranslateUsed === 0) {
    console.log('‚ö†Ô∏è  ATEN√á√ÉO: Google Translate API n√£o foi usada. Verifique a configura√ß√£o da chave de API.');
    console.log('   Configure GOOGLE_TRANSLATE_API_KEY no arquivo .env para melhor precis√£o.');
  }
  
  console.log('\nüèÅ Teste conclu√≠do!');
}

// Executar teste
if (require.main === module) {
  testTranslation().catch(error => {
    console.error('‚ùå Erro durante o teste:', error);
    process.exit(1);
  });
}

export { testTranslation };